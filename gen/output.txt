void CPU::dispatch(u8 opcode) { switch (opcode) { case 0x0: in_brk(); break; case 0x1: in_ora(); break; case 0x2: in_kil(); break; case 0x3: in_slo(); break; case 0x4: in_nop(); break; case 0x5: in_ora(); break; case 0x6: in_asl(); break; case 0x7: in_slo(); break; case 0x8: in_php(); break; case 0x9: in_ora(); break; case 0xa: in_asl(); break; case 0xb: in_anc(); break; case 0xc: in_nop(); break; case 0xd: in_ora(); break; case 0xe: in_asl(); break; case 0xf: in_slo(); break; case 0x10: in_bpl(); break; case 0x11: in_ora(); break; case 0x12: in_kil(); break; case 0x13: in_slo(); break; case 0x14: in_nop(); break; case 0x15: in_ora(); break; case 0x16: in_asl(); break; case 0x17: in_slo(); break; case 0x18: in_clc(); break; case 0x19: in_ora(); break; case 0x1a: in_nop(); break; case 0x1b: in_slo(); break; case 0x1c: in_nop(); break; case 0x1d: in_ora(); break; case 0x1e: in_asl(); break; case 0x1f: in_slo(); break; case 0x20: in_jsr(); break; case 0x21: in_and(); break; case 0x22: in_kil(); break; case 0x23: in_rla(); break; case 0x24: in_bit(); break; case 0x25: in_and(); break; case 0x26: in_rol(); break; case 0x27: in_rla(); break; case 0x28: in_plp(); break; case 0x29: in_and(); break; case 0x2a: in_rol(); break; case 0x2b: in_anc(); break; case 0x2c: in_bit(); break; case 0x2d: in_and(); break; case 0x2e: in_rol(); break; case 0x2f: in_rla(); break; case 0x30: in_bmi(); break; case 0x31: in_and(); break; case 0x32: in_kil(); break; case 0x33: in_rla(); break; case 0x34: in_nop(); break; case 0x35: in_and(); break; case 0x36: in_rol(); break; case 0x37: in_rla(); break; case 0x38: in_sec(); break; case 0x39: in_and(); break; case 0x3a: in_nop(); break; case 0x3b: in_rla(); break; case 0x3c: in_nop(); break; case 0x3d: in_and(); break; case 0x3e: in_rol(); break; case 0x3f: in_rla(); break; case 0x40: in_rti(); break; case 0x41: in_eor(); break; case 0x42: in_kil(); break; case 0x43: in_sre(); break; case 0x44: in_nop(); break; case 0x45: in_eor(); break; case 0x46: in_lsr(); break; case 0x47: in_sre(); break; case 0x48: in_pha(); break; case 0x49: in_eor(); break; case 0x4a: in_lsr(); break; case 0x4b: in_alr(); break; case 0x4c: in_jmp(); break; case 0x4d: in_eor(); break; case 0x4e: in_lsr(); break; case 0x4f: in_sre(); break; case 0x50: in_bvc(); break; case 0x51: in_eor(); break; case 0x52: in_kil(); break; case 0x53: in_sre(); break; case 0x54: in_nop(); break; case 0x55: in_eor(); break; case 0x56: in_lsr(); break; case 0x57: in_sre(); break; case 0x58: in_cli(); break; case 0x59: in_eor(); break; case 0x5a: in_nop(); break; case 0x5b: in_sre(); break; case 0x5c: in_nop(); break; case 0x5d: in_eor(); break; case 0x5e: in_lsr(); break; case 0x5f: in_sre(); break; case 0x60: in_rts(); break; case 0x61: in_adc(); break; case 0x62: in_kil(); break; case 0x63: in_rra(); break; case 0x64: in_nop(); break; case 0x65: in_adc(); break; case 0x66: in_ror(); break; case 0x67: in_rra(); break; case 0x68: in_pla(); break; case 0x69: in_adc(); break; case 0x6a: in_ror(); break; case 0x6b: in_arr(); break; case 0x6c: in_jmp(); break; case 0x6d: in_adc(); break; case 0x6e: in_ror(); break; case 0x6f: in_rra(); break; case 0x70: in_bvs(); break; case 0x71: in_adc(); break; case 0x72: in_kil(); break; case 0x73: in_rra(); break; case 0x74: in_nop(); break; case 0x75: in_adc(); break; case 0x76: in_ror(); break; case 0x77: in_rra(); break; case 0x78: in_sei(); break; case 0x79: in_adc(); break; case 0x7a: in_nop(); break; case 0x7b: in_rra(); break; case 0x7c: in_nop(); break; case 0x7d: in_adc(); break; case 0x7e: in_ror(); break; case 0x7f: in_rra(); break; case 0x80: in_nop(); break; case 0x81: in_sta(); break; case 0x82: in_nop(); break; case 0x83: in_sax(); break; case 0x84: in_sty(); break; case 0x85: in_sta(); break; case 0x86: in_stx(); break; case 0x87: in_sax(); break; case 0x88: in_dey(); break; case 0x89: in_nop(); break; case 0x8a: in_txa(); break; case 0x8b: in_xaa(); break; case 0x8c: in_sty(); break; case 0x8d: in_sta(); break; case 0x8e: in_stx(); break; case 0x8f: in_sax(); break; case 0x90: in_bcc(); break; case 0x91: in_sta(); break; case 0x92: in_kil(); break; case 0x93: in_ahx(); break; case 0x94: in_sty(); break; case 0x95: in_sta(); break; case 0x96: in_stx(); break; case 0x97: in_sax(); break; case 0x98: in_tya(); break; case 0x99: in_sta(); break; case 0x9a: in_txs(); break; case 0x9b: in_tas(); break; case 0x9c: in_shy(); break; case 0x9d: in_sta(); break; case 0x9e: in_shx(); break; case 0x9f: in_ahx(); break; case 0xa0: in_ldy(); break; case 0xa1: in_lda(); break; case 0xa2: in_ldx(); break; case 0xa3: in_lax(); break; case 0xa4: in_ldy(); break; case 0xa5: in_lda(); break; case 0xa6: in_ldx(); break; case 0xa7: in_lax(); break; case 0xa8: in_tay(); break; case 0xa9: in_lda(); break; case 0xaa: in_tax(); break; case 0xab: in_lax(); break; case 0xac: in_ldy(); break; case 0xad: in_lda(); break; case 0xae: in_ldx(); break; case 0xaf: in_lax(); break; case 0xb0: in_bcs(); break; case 0xb1: in_lda(); break; case 0xb2: in_kil(); break; case 0xb3: in_lax(); break; case 0xb4: in_ldy(); break; case 0xb5: in_lda(); break; case 0xb6: in_ldx(); break; case 0xb7: in_lax(); break; case 0xb8: in_clv(); break; case 0xb9: in_lda(); break; case 0xba: in_tsx(); break; case 0xbb: in_las(); break; case 0xbc: in_ldy(); break; case 0xbd: in_lda(); break; case 0xbe: in_ldx(); break; case 0xbf: in_lax(); break; case 0xc0: in_cpy(); break; case 0xc1: in_cmp(); break; case 0xc2: in_nop(); break; case 0xc3: in_dcp(); break; case 0xc4: in_cpy(); break; case 0xc5: in_cmp(); break; case 0xc6: in_dec(); break; case 0xc7: in_dcp(); break; case 0xc8: in_iny(); break; case 0xc9: in_cmp(); break; case 0xca: in_dex(); break; case 0xcb: in_axs(); break; case 0xcc: in_cpy(); break; case 0xcd: in_cmp(); break; case 0xce: in_dec(); break; case 0xcf: in_dcp(); break; case 0xd0: in_bne(); break; case 0xd1: in_cmp(); break; case 0xd2: in_kil(); break; case 0xd3: in_dcp(); break; case 0xd4: in_nop(); break; case 0xd5: in_cmp(); break; case 0xd6: in_dec(); break; case 0xd7: in_dcp(); break; case 0xd8: in_cld(); break; case 0xd9: in_cmp(); break; case 0xda: in_nop(); break; case 0xdb: in_dcp(); break; case 0xdc: in_nop(); break; case 0xdd: in_cmp(); break; case 0xde: in_dec(); break; case 0xdf: in_dcp(); break; case 0xe0: in_cpx(); break; case 0xe1: in_sbc(); break; case 0xe2: in_nop(); break; case 0xe3: in_isc(); break; case 0xe4: in_cpx(); break; case 0xe5: in_sbc(); break; case 0xe6: in_inc(); break; case 0xe7: in_isc(); break; case 0xe8: in_inx(); break; case 0xe9: in_sbc(); break; case 0xea: in_nop(); break; case 0xeb: in_sbc(); break; case 0xec: in_cpx(); break; case 0xed: in_sbc(); break; case 0xee: in_inc(); break; case 0xef: in_isc(); break; case 0xf0: in_beq(); break; case 0xf1: in_sbc(); break; case 0xf2: in_kil(); break; case 0xf3: in_isc(); break; case 0xf4: in_nop(); break; case 0xf5: in_sbc(); break; case 0xf6: in_inc(); break; case 0xf7: in_isc(); break; case 0xf8: in_sed(); break; case 0xf9: in_sbc(); break; case 0xfa: in_nop(); break; case 0xfb: in_isc(); break; case 0xfc: in_nop(); break; case 0xfd: in_sbc(); break; case 0xfe: in_inc(); break; case 0xff: in_isc(); break; } }